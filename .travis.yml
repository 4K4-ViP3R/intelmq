sudo: required
dist: trusty
language: python
env:
  - requirements=true
  - requirements=false
python:
  - 3.4
  - 3.5
  - 3.6
matrix:
  include:
  - python: 3.4
    env: mode=debian
  - python: 3.6
    env: mode=codestyle
install:
  - if [[ -v requirements ]]; then sudo apt-get install polipo lighttpd; fi
  - if [[ $mode == debian ]]; then sudo apt-get install dpkg-dev dh-python python-setuptools python3-setuptools python3-all debhelper quilt fakeroot dh-systemd safe-rm; fi
  - if [[ $requirements == true ]]; then for file in intelmq/bots/*/*/REQUIREMENTS.txt; do pip install -r $file; done; fi
  - if [[ $TRAVIS_PYTHON_VERSION < '3.5' ]]; then sudo pip install typing; fi
  - if [[ -v requirements ]]; then pip install codecov; fi
  - if [[ $mode == codestyle ]]; then pip install pycodestyle; fi
  - if [[ -v requirements ]]; then sudo sed -i '/^Defaults\tsecure_path.*$/ d' /etc/sudoers; fi
  - if [[ -v requirements ]]; then sudo pip install .; fi
  - if [[ -v requirements ]]; then sudo cp /opt/intelmq/etc/examples/* /opt/intelmq/etc/; fi
before_script:
  - if [[ $REQUIREMENTS == true ]] ; then psql -c "CREATE USER intelmq WITH SUPERUSER" -U postgres; fi
  - if [[ $REQUIREMENTS == true ]] ; then psql -c "CREATE DATABASE intelmq" -U intelmq template1; fi
  - if [[ $REQUIREMENTS == true ]] ; then psql -c "GRANT ALL PRIVILEGES ON DATABASE intelmq TO intelmq" -U intelmq; fi
  - if [[ $REQUIREMENTS == true ]] ; then intelmq_psql_initdb; fi
  - if [[ $REQUIREMENTS == true ]] ; then sed -i 's/events/tests/g' /tmp/initdb.sql; fi
  - if [[ $REQUIREMENTS == true ]] ; then psql -v ON_ERROR_STOP=on -f /tmp/initdb.sql intelmq -U intelmq; fi
  - if [[ $mode == debian ]]; then VERSION=$(git describe --abbrev=0 --tags); fi
  - if [[ $mode == debian ]]; then git archive --format=tar.gz HEAD > ../intelmq_$VERSION.orig.tar.gz; fi
  - if [[ $mode == debian ]]; then git archive --format=tar.gz --prefix=debian/ HEAD:debian/ > ../intelmq_$VERSION-1.debian.tar.gz; fi
  - if [[ $mode == debian ]]; then pushd ..; fi
  - if [[ $mode == debian ]]; then mkdir build; fi
  - if [[ $mode == debian ]]; then cd build; fi
  - if [[ $mode == debian ]]; then tar -xzf ../intelmq_$VERSION.orig.tar.gz; fi
  - if [[ $mode == debian ]]; then tar -xzf ../intelmq_$VERSION-1.debian.tar.gz; fi
  - if [[ $mode == debian ]]; then popd; fi
  - if [[ -v requirements ]]; then sudo cp intelmq/tests/assets/* /var/www/; fi
script:
  - if [[ $requirements == true ]]; then INTELMQ_TEST_DATABASES=1 INTELMQ_TEST_LOCAL_WEB=1 INTELMQ_TEST_EXOTIC=1 nosetests --with-coverage --cover-package=intelmq --cover-branches; elif [[ $requirements == false ]]; then INTELMQ_TEST_LOCAL_WEB=1 nosetests --with-coverage --cover-package=intelmq --cover-branches; fi
  - if [[ $mode == codestyle ]]; then pycodestyle intelmq/{bots,lib,bin}; fi
  - if [[ $mode == debian ]]; then pushd ../build; fi
  - if [[ $mode == debian ]]; then DEB_BUILD_OPTIONS='nocheck' dpkg-buildpackage -us -uc -d; fi
  - if [[ $mode == debian ]]; then popd; fi
services:
  - redis-server
  - postgresql
  - elasticsearch
  - mongodb
after_success:
  - if [[ -v requirements ]]; then codecov; fi
addons:
  postgresql: "9.4"
